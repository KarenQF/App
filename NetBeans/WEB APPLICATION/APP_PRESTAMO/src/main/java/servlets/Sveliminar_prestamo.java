// Paquete donde se encuentra la clase del servlet
package servlets;

// Importaciones necesarias para manejar servlets y conexiones JDBC
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.*;
import java.io.IOException;
import java.sql.*;

// Anotaci√≥n que indica la URL con la que se accede al servlet
@WebServlet("/Sveliminar_prestamo")
public class Sveliminar_prestamo extends HttpServlet {

    // Datos de conexi√≥n a la base de datos MySQL
    private final String URL = "jdbc:mysql://localhost:3306/sistema_prestamo?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC";
    private final String USER = "root";
    private final String PASSWORD = "Kquintero92*";

    // M√©todo que se ejecuta cuando el formulario usa el m√©todo POST
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        // Establecer codificaci√≥n
        request.setCharacterEncoding("UTF-8");
        response.setContentType("text/html;charset=UTF-8");

        // Recibir el ID del usuario desde el formulario
        String idPrestamoParam = request.getParameter("id_prestamo");
        
        // Crear o recuperar la sesi√≥n actual (para mostrar mensajes de confirmaci√≥n o error)
        HttpSession session = request.getSession(); // üëà para guardar mensajes temporales

        //Validaci√≥n del par√°metro recibido
        // Si el ID no fue enviado o est√° vac√≠o, se env√≠a un mensaje de advertencia y se redirige al men√∫ principal
        if (idPrestamoParam == null || idPrestamoParam.isEmpty()) {
            session.setAttribute("mensaje", "ID de la reserva no proporcionado.");
            response.sendRedirect("menu_gestion_reserva.jsp");
            return;
        }
        // Convertir el ID recibido (que llega como texto) a un n√∫mero entero
        int idPrestamo = Integer.parseInt(idPrestamoParam);

        // Conexi√≥n y eliminaci√≥n del usuario
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD)) {

            // Sentencia SQL para eliminar un usuario seg√∫n su ID
            String sql = "DELETE FROM prestamo WHERE id_prestamo = ?";
            
            // Se usa PreparedStatement para evitar inyecci√≥n SQL
            try (PreparedStatement ps = conn.prepareStatement(sql)) {
                ps.setInt(1, idPrestamo); // Asignar el valor del ID en la consulta
                
                // Ejecutar la sentencia y obtener el n√∫mero de filas afectadas
                int filasAfectadas = ps.executeUpdate();
                
                //Verificar si se elimin√≥ correctamente
                if (filasAfectadas > 0) {
                    
                    // Si el usuario exist√≠a y fue eliminado
                    session.setAttribute("mensaje", "‚úÖ Pr√©stamo eliminado correctamente.");
                } else {
                    // Si no se encontr√≥ el usuario con el ID proporcionado
                    session.setAttribute("mensaje", "‚ö†Ô∏è No se encontr√≥ el pr√©stamo a eliminar.");
                }
            }

        } catch (SQLException e) {
             // Manejo de errores SQL o de conexi√≥n
            e.printStackTrace();
            session.setAttribute("mensaje", "‚ùå Error al eliminar el pr√©stamo: " + e.getMessage());
        }

        // Redirecci√≥n para evitar reenv√≠o y limpiar el formulario
        response.sendRedirect("menu_gestion_prestamo.jsp");
    }

    //M√©todo opcional de descripci√≥n del servlet
    @Override
    public String getServletInfo() {
        return "Servlet que elimina un pr√©stamo del sistema de pr√©stamo.";
    }
}
